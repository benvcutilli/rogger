# (A) For blocking people not in the US due to GDPR
#   https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=OJ:L:2016:119:FULL&from=EN
#   Official Journal of the European Union
#   author - European Union
#   published - 2016.5.4
#   via - https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:02016R0679-20160504&from=EN
#         possibly https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:02016R0679-20160504&qid=1567786393726&from=EN
# Blocking is an idea from an unknown reference, possibly when the
# LA Times (https://www.latimes.com/) did it some time ago according to
# some unknown source published and retrieved around May of 2018.

# (B) https://www.ietf.org/rfc/rfc2616.txt
#     Hypertext Transfer Protocol -- HTTP/1.1
#     authors - R. Fielding, J. Gettys, J. Mogul, H. Frystyk,
#                L. Manister, P. Leach, T. Berners-Lee
#     rfc # - 2616
#     published - 1999.6
#     via - https://www.w3.org/Protocols/rfc2616/rfc2616.html

# (C) nginx.org
#     NGINX

# (D) http://nginx.org/en/docs/http/ngx_http_core_module.html
#     Module ngx_http_core_module
#     retrieved - 2019.11.10, 2019.11.23

# (E) https://tools.ietf.org/html/rfc7617
#     RFC 7617 - The 'Basic' HTTP Authentication Scheme
#     author - J. Reschke
#     published - 2015.9
#     retrieved - 2019.11.20
#     via - https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication,
#           HTTP authentication - HTTP | MDN
#           published - 2019.10.30
#           retrived - 2019.11.20
#           "Basic authentication scheme" section

# (F) https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/
#     Using the Forwarded header | NGINX
#     retrieved - 2019.11.20
#     via - google.com search for "http_x_forwarded_for nginx"

# (G) https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For
#     X-Forwarded-For - HTTP | MDN
#     published - 2019.3.23
#     retrieved - 2019.11.20
#     via - google.com search for "x-forwarded-for"

# (H) https://github.com/torvalds/linux
#     Linux

# (I) https://tools.ietf.org/html/rfc1034
#     Domain Names - Concepts and Facilities
#     author - P. Mockapetris
#     published - 1987.11
#     retrieved - 2019.11.22
#     via - https://en.wikipedia.org/wiki/Domain_Name_System
#           Domain Name System - Wikipedia
#           retrieved - 2019.11.22
#           published - 2019.9.30
#           via - google.com search for "DNS rfc"
#           relevant section - "History"

# (J) https://tools.ietf.org/html/rfc1035
#     Domain Names - Implementation and Specification
#     author - P. Mockapetris
#     published - 1987.11
#     retrieved - 2019.11.22
#     via - https://en.wikipedia.org/wiki/Domain_Name_System
#           Domain Name System - Wikipedia
#           retrieved - 2019.11.22
#           published - 2019.9.30
#           via - google.com search for "DNS rfc"
#           relevant section - "History"

# (K) nginx.org/en/docs/http/ngx_http_rewrite_module.html
#     Module ngx_http_rewrite_module
#     retrieved - 2019.11.23

# (L) https://tools.ietf.org/html/rfc2818
#     HTTP over TLS
#     author - E. Rescorla
#     retrieved - 2019.11.23, prior as well
#     published - 2000.5
#     via - https://en.wikipedia.org/wiki/HTTPS
#           HTTPS - Wikipedia
#           retrieved - 2019.11.23, also possibly prior times
#           published - 2019.11.20, also possibly prior times
#           relevant section - "History"
#           via - google.com search for "https rfc"

# (M) http://nginx.org/en/docs/ngx_core_module.html
#     Core functionality
#     retrieved - 2019.11.24
#     via - search using google.com

# (N) nginx.org/en/docs/http/ngx_http_log_module.html
#     Module ngx_http_log_module
#     retrieved - 2019.11.25, 2019.11.30
#     via - http://nginx.org/en/docs/dirindex.html, "log_format" link

# (O) http://nginx.org/en/docs/http/ngx_http_gzip_module.html
#     Module ngx_http_gzip_module
#     retrieved - 2019.11.26
#     via - http://nginx.org/en/docs/dirindex.html, "gzip" link

# (P) https://tools.ietf.org/html/rfc1952
#     GZIP file format specification version 4.3
#     author - P. Deutsch
#     retrieved - 2019.11.26
#     published - 1996.5
#     rfc number - 1952
#     via - https://www.gzip.org/
#           The gzip home page
#           retrieved - 2019.11.26
#           via - google.com search for "gzip"

# (Q) https://www.gnu.org/software/gzip/
#     gzip
#     author - Jean-loup Gailly, Mark Adler, Paul Eggert, Jim Meyering, others
#     via - https://www.gzip.org/
#           The gzip home page
#           retrieved - 2019.11.26
#           via - google.com search for "gzip"

# (R) https://zlib.net/
#     zlib
#     via - search with google.com

# (S) http://nginx.org/download/nginx-1.16.1.tar.gz
#     nginx-1.16.1.tar.gz
#     retrieved - latter part of 2019

# (T) https://www.iso.org/iso-3166-country-codes.html
#     ISO - ISO 3166 Country Codes
#     author - International Organization for Standards
#     retrieved - 2019.11.26
#     via - reference V

# (U) google.com
#     author - Google, Inc.
#     retrieved - 2019.11.26
#     search term - country iso codes

# (V) https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes
#     List of ISO 3166 country codes - Wikipedia
#     retrieved - 2019.11.26
#     published - 2019.11.26
#     via - reference U
#     relevant section - "External links"

# (W) nginx.org/en/docs/http/ngx_http_uwsgi_module.html
#     Module ngx_http_uwsgi_module
#     retrieved - 2019.11.29

# (X) http://nginx.org/en/docs/http/ngx_http_ssl_module.html
#     Module ngx_http_ssl_module
#     retrieved - 2019.11.29

# (Y) https://tools.ietf.org/html/rfc7468
#     Textual Encodings of PKIX, PKCS, and CMS Structures
#     authors - S. Josefsson and S. Leonard
#     published - 2015.4 c
#     rfc number - 7468
#     retrieved - 2019.11.29 and prior
#     via - reference Z

# (Z) https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail
#     Privacy-Enhanced Mail - Wikipedia
#     published - 2019.9.29 and prior
#     retrieved - 2019.11.29 and prior
#     via - google.com search for "PEM rfc"

# (AA) https://tools.ietf.org/html/rfc1421
#      Privacy Enhancement for Internet Electronic Mail:
#      Part I: Message Encryption and Authentication Procedures
#      author - J. Linn
#      published - 1993.2
#      retrieved - 2019.11.29
#      rfc number - 1421
#      via - google.com search for "PEM rfc"

# (AB) https://tools.ietf.org/html/rfc791
#      Internet Protocol: DARPA Internet Program: Protocol Specification
#      author - Information Sciences Institute
#      published - 1981.9
#      retrieved - 2019.11.30
#      via - reference AC

# (AC) https://en.wikipedia.org/wiki/IPv4
#      IPv4 - Wikipedia
#      published - 2019.11.30
#      retrieved - 2019.11.30
#      via - google.com search for "ip address"

# (AD) https://tools.ietf.org/html/rfc8200
#      Internet Protocol, Version 6 (IPv6) Specfication
#      author - S. Deering, R. Hinden (author order from reference)
#      published - 2017.7
#      retrieved - 2019.11.30
#      via - reference AE

# (AE) https://en.wikipedia.org/wiki/IPv6
#      IPv6 - Wikipedia
#      retrieved - 2019.11.30
#      published - 2019.11.26
#      via - https://en.wikipedia.org/wiki/IP_address

# See "user" documentation in M for the "user" directive's reference. I think
# this directive refers to users in Linux (H). This line of configuration came
# with NGINX (C) by default.
user  nginx;
# See "worker_processes" documentation in M for the "worker_processes" directive's
# reference. This line of configuration came with NGINX (C) by default.
worker_processes  1;

# See "error_log" documentation in M for the "error_log" directive's reference.
# Look at that reference as well for the meaning of "warn".
# This line of configuration came with NGINX (C) by default.
error_log  /var/log/nginx/error.log warn;
# See the "pid" documentation in M for the "pid" directive's reference.
# This line of configuration came with NGINX (C) by default.
pid        /var/run/nginx.pid;

# See (A) for information regarding the next line of configuration (the
# line starting with "load_module").
# Using load_module in this next line is from
#   https://www.nginx.com/blog/compiling-dynamic-modules-nginx-plus/amp/
#   How to Compile Dynamic Modules for NGINX Plus
#   published - 2016 (approximately)
#   retrieved - 2019.11.4
#   via - google.com search with search phrase "compiling new modules for nginx"
# and from the section "Installing" in
#   https://github.com/leev/ngx_http_geoip2_module
#   GitHub - leev/ngx_http_geoip2_module: Nginx GeoIP2 module
#   author - leev
#   retrieved - sometime during 2019.10.31 - 2019.11.4
#   via - https://serverfault.com/questions/865990/nginx-and-geolite2-not-working

# this module is also from the reference above. It was recommended by
#   https://serverfault.com/questions/865990/nginx-and-geolite2-not-working
#   geoip - Nginx and GeoLite2 not working - Server Fault
#   author - Joe and user3448600
#   retrieved - sometime during 2019.10.31 - 2019.11.4
#   published - 2017.7.31, 2018.9.3
#   via - google.com search for "ngx_http_geoip_module geolite"
# See the "load_module" documentation in M for the "load_module" directive's reference
load_module modules/ngx_http_geoip2_module.so;


# "events" and "worker_connections" are specified in their respective documentation
# found in M.
# NGINX (C) provided these next three configuration lines by default.
events {
    worker_connections  1024;
}

# I assume this next "http" directive (http documentation of D) refers to an HTTP server (see B)
# This line of configuration came with NGINX (C) by default.
http {
    # This configuration line has something to do with B, 3.7, probably. File likely comes with C.
    # See the "include" documentation in M for the "include" directive's reference. This line
    # of configuration came with NGINX (C) by default.
    include       /etc/nginx/mime.types;
    # A MIME type from B 3.7. This line comes with this file by default, I think.
    # See "default_type" documentation in D for the "default_type" directive's reference.
    # This line of configuration came with NGINX (C) by default.
    default_type  application/octet-stream;

    # remote_addr: defined in D, "Embedded Variables"; that reference states that this
    #              variable contains the IP address, and IPv4 and IPv6 addresses are
    #              specified in references AB and AD (the introductory section of AC
    #              recommended AB, while the "Standardization through RFCs" section of
    #              AE recommended AD).
    # remote_user: defined in D, "Embedded Variables" (which pointed out that this is
    #                 part of Basic Authentication; this is described in
    #                 reference E)
    # request: defined in D, "Embedded Variables", don't know what this specfically
    #          refers to
    # body_bytes_sent: defined in D, "Embedded Variables", not sure what is meant
    #                  by "body"
    # http_referer: Couldn't find what this variable is a part of, but
    #               this is likely the Referer field in section 14.36 of B
    # http_user_agent: Again, don't know where this is from, but this is
    #                  likely the value of the "User-Agent" header of B,
    #                  14.43
    # http_x_forwarded_for: Unsure what provides this variable. Probably holds
    #                  X-Forwarded-For's value according to the introductory
    #                  section of F, which is a header not from any standard
    #                  according to "Specifications" of G.
    # This "log_format" line and the two lines that follow it appears to have
    # come with the default nginx.conf provided with NGINX (C).
    # See "log_format" documentation in N for the "log_format" directive's reference.
    # Also, "time_local" and "status" are defined there as well, so look at
    # that for information about those two variables (status probably refers
    # to HTTP status codes defined in section 6.1.1 of B). The meaning of "main"
    # is unknown ("log_format" documentation says that it is some sort of format)
    # as well as where it is defined.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # See "access_log" documentation in N for the "access_log" directive's reference.
    # I don't know where "main" came from other than in that documentation it is
    # implied to be some sort of "format". This line of configuration came with NGINX
    # (C) by default.
    access_log  /var/log/nginx/access.log  main;

    # sendfile directive from D, sendfile documentation.
    # This line of configuration came with NGINX (C) by default.
    sendfile        on;
    # tcp_nopush directive from D, tcp_nopush documentation, which states that this controls
    # (H)'s TCP_CORK option somehow related to sockets.
    # This line of configuration came with NGINX (C) by default; this line was commented
    # out by default, I think.
    #tcp_nopush     on;

    # keepalive_timeout directive from D, keepalive_timeout documentation
    # This line of configuration came with NGINX (C) by default.
    keepalive_timeout  65;

    # This line of configuration came with NGINX (C) by default; this line was commented
    # out by default, I think. See "gzip" documentation in O for the "gzip" directive's
    # reference. According to that reference this directive regards the usage of gzip
    # compression, which is defined by P; I know that this doesn't refer to the gzip
    # program (Q) as zlib (R) is used for compression according to the NGINX "configure"
    # script found at (S), not gzip.
    #gzip  on;

    # See "include" documentation in M for the "include" directive's reference.
    # This line of configuration came with NGINX (C) by default.
    include /etc/nginx/conf.d/*.conf;


    # See (A) for the next line of configuration.
    # File GeoLite2-Country.mmdb provided by geoipupdate, which is from
    #   https://launchpad.net/~maxmind/+archive/ubuntu/ppa
    #   user - maxmind
    #   page via launchpad.net search for "maxmind"
    # Using the ngx_http_geoip2_module discussed above to set the
    # $country variable to what is probably (according to V which was
    # found with U) the ISO 3166 country code defined by T.
    geoip2 /home/ubuntu/maxminddatabasefiles/GeoLite2-Country.mmdb {
      auto_reload 1m;
      $country country iso_code;
    }

    # THIS NEXT SERVER DEFINTION IS A DERIVATIVE OF THE SERVER DEFINTIONS FOUND AT
    #   https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-uwsgi-and-nginx-on-ubuntu-14-04
    #   How to Serve Django Applications with uWSGI and Nginx on Ubuntu 14.04 | DigitalOcean
    #   author - Justin Ellingwood
    #   published - 2015.3.11
    #   via - probably a google.com search
    # AND
    #   http://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html
    #   Quickstart for Python/WSGI applications -- uWSGI 2.0 documentation
    #   author - Pavlo Kapyshin, Aarni Koskela, Unbit, Jeff Widman, Balaji Iyer, Inada Naoki,
    #            Adriano Di Luzio, lord63, kangle yu, Viktor Szakats, Jon Dufresne, Tobias Schonberg
    #   published - 2016.12.15
    #   "revision" - b1f83a5d
    #   via - probably a google.com search
    #   other info - authors and publication date are from https://github.com/unbit/uwsgi-docs/blob/master/WSGIquickstart.rst
    # AND PROBABLY OTHERS. Putting this server defintion here is from
    #   https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts
    #   Understanding the Nginx Configuration File Structure and Configuration Contexts | DigitalOcean
    #   author - Justin Ellingwood
    #   published - 2014.11.19
    #   via - probably a google.com search
    # All sections below talking about how Certbot is its manager were created and/or modified by Certbot
    #   https://certbot.eff.org/
    #   author - Electronic Frontier Foundation
    # not me. Method of redirecting non-HTTPS (HTTPS from L) requests in the nginx rogger server config (The
    # "if ($scheme != "https")" if clause; see that section for more citations) was made by Certbot, and
    #   https://serverfault.com/questions/250476/how-to-force-or-redirect-to-ssl-in-nginx
    #   How to force or redirect to SSL in nginx? - Server Fault
    #   author - various
    #   retrieved - late 2017, I think
    #   via - probably some google.com search
    # confirmed for me that this was a way to do that and also pointed out that I can still listen on port 80
    # in the same server definition to allow those non-HTTPS connections to come in and get redirected to the HTTPS site.
    # See "server" documentation in D for the "server" directive's reference.
    # This "server" line (just the line, not the block) may have come with this nginx.conf
    # file, which was supplied by NGINX (C)
    server {
      # FOR CITATION ABOUT THIS NEXT listen, SEE THE CITATION ABOVE THIS SERVER DEFINITION
      # See "listen" documentation in D for the "listen" directive's reference.
      # This line of configuration may or may not have come with NGINX (C) by default;
      # I can't remember.
      listen 80;

      # See "server_name" documentation in D for the "server_name" directive's reference;
      # According to that, server_name deals with domain names; domain names are defined in I and J.
      # This line may have been modified from a potential default line provided
      # by this file, which was provided by NGINX (C)
      server_name rogger.co www.rogger.co *.rogger.co;


      # See (A) for the reason why this conditional exists. This conditional
      # roughly follows the country-blocking code from
      #   https://uwsgi-docs.readthedocs.io/en/latest/GeoIP.html
      #   The GeoIP Plugin -- uWSGI 2.0 Documentation
      #   Retrieved 2019.10.31
      #   "Revision" (bottom of page) b1f83a5d
      #   Via google.com search
      # in the "An example" section
      # I tested to see if "country" was empty for debugging which was a strategy used by
      # unknown reference retrieved probably around 2019.10.31 saying that their variable was empty
      # See "if" documentation in k for the "if" directive's reference.
      if ($country != "US") {
        # See "return" documentation in K for the "return" directive's reference; this uses
        # a status code (403), and status codes are defined in 6.1.1 of B
        return 403;
      }

      # See "location" documentation in D for the "location" directive's reference.
      # I don't think that this next configuration block came by default with this
      # file, but I could be wrong. "/static" probably wasn't there by default if
      # the block did, but "/home/ubuntu/roggerenv/rogger" definitely wasn't there
      # by default.
      location /static {
        # See "root" documentation in D for the "root" directive's reference.
        root /home/ubuntu/roggerenv/rogger;
      }

      # Thanks to
      #   https://serverfault.com/questions/814767/413-request-entity-too-large-in-nginx-with-client-max-body-size-set
      #   "413 Request Entity Too Large" in Nginx with "client_max_body_size" set - Server Fault
      #   author - various
      #   retrieved - late 2017, I think
      #   via - probably some google.com search
      # for telling me what the variable is in the nginx configuration that controls how big a
      # request is allowed through the server. Limiting the request size using the web server
      # instead of Django or something else is a suggestion from an unknown source.
      # The "client_max_body_size" directive has documentation in D. I think I put this
      # line in by myself (the acceptible size was definitely written by me, maybe with
      # the exception of the "M" in the size.
      client_max_body_size 10M;

      # This sends the request to my uWSGI instance. uWSGI is from
      #   https://uwsgi-docs.readthedocs.io/en/latest/
      #   The uWSGI project -- uWSGI 2.0 documentation
      # See "location" documentation in D for the "location" directive's reference
      # These four lines may have been in here by default, but probably not.
      location / {
        # See "include" documentation in M for the "include" directive's reference.
        include uwsgi_params;
        # See "uwsgi_pass" documentation in W for the "uwsgi_pass" directive's documentation.
        uwsgi_pass 127.0.0.1:8251;
      }

    # See "listen" documentation in D for the "listen" directive's reference.
    # See "ssl_certificate" documentation in X for the "ssl_certificate" directive's reference;
    # this directive refers to HTTPS defined in L; the .pem file format is described
    # by Y according to the introductory section of D, which makes sense because the PEM format
    # in AA doesn't really match key files that I have seen before.
    # See "include" documentation in M for the "include" directive's reference.
    # FOR CITATION ABOUT THESE NEXT FOUR LINES, SEE THE CITATION ABOVE THIS SERVER DEFINITION
    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/rogger.co/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/rogger.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


    # FOR CITATION ABOUT THIS NEXT if SECTION, SEE THE CITATION ABOVE THIS SERVER DEFINITION
    # "scheme" is from "Embedded Variables" in D. Return directive is defined in its
    # respective documentation in K, the HTTPS scheme is defined by L, return codes like
    # the 301 are discussed in B, 6.1.1, and "host" and "request_uri" are defined in D's
    # "Embedded Variables"
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    # FOR CITATION ABOUT THIS NEXT if SECTION, SEE THE CITATION ABOVE THIS SERVER DEFINITION
    # Redirect non-https traffic to https
    # Comment by Ben: "scheme" is from "Embedded Variables" in D. Return directive is defined in its
    # respective documentation in K, the HTTPS scheme is defined by L, return codes like
    # the 301 are discussed in B, 6.1.1, and "host" and "request_uri" are defined in D's
    # "Embedded Variables"
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot




}

    # This server definition is used to reject requests that aren't for the domains processed by the server definition below.
    # The "return" usage is from "Server Names", http://nginx.org/en/docs/http/server_names.html (retrieved 2017.12.18 2018.3.21,
    # section "Miscellaneous Names", probably via a google.com search) in the code under:
    #    'In catch-all server examples the strange name "_" can be seen'
    # (that phrase is also why I used "none" for a server name). Putting this as the first server to make it "default"
    # (although it was suggested by {{b}} to just use the default_server command, which also said that all request will
    # go to the first server if no server uses "default_server", so this is not exactly the same thing as "the first
    # server is the default server)nso that other domains are processed here and not in the other server is probably
    # from the same page and/or
    # {{a}} https://serverfault.com/a/525011
    #       Nginx "Default" Server? - Server Fault
    #       authors - Fleshgrinder, Rob Wilkerson, possibly others
    #       via - probably some google.com search
    # {{b}} http://tech.genericwhite.com/nginx-server-name-is-not-working-ignoring-config-and-getting-the-wrong-server-including-ssl
    #       NGINX server_name is not working, ignoring config and getting the wrong server including SSL - I Love Javascript! (December 2017/January 2018)
    #       retrieved - 2018.3.21 and sometime(s) previous in 2018 and/or 2017
    #       published - 5:06PM on 2017.1.17
    #       author - TQ White II according to https://github.com/tqwhite.
    #       via - probably some google.com search
    # {{c}} https://stackoverflow.com/a/9826635/4722104,
    #       Why is nginx responding to any domain name - Stack Overflow
    #       published - 2014.9.27
    #       retrieved - 2018.3.21
    #       the answer by "Dayo"
    #       via - probably some google.com search
    # Making sure that these requests stop here and not at Django so that I don't
    # get spammed with error emails is an idea from
    #   https://stackoverflow.com/questions/18220519/how-to-disable-djangos-invalid-http-host-error
    #   logging - How to disable Django's invalid HTTP_HOST error? - Stack Overflow
    #   authors - various
    #   via - probably some google.com search
    # Even though this version of the site uses Nginx (and I think that site talks about Apache),
    # there might be some configuration used in that reference that was directly, or more likely
    # indirectly, relevant to what I wrote for this server definition. Using two different listens
    # for each port is an idea from Certbot
    #   certbot.eff.org
    #   Electronic Frontier Foundation
    # which did this for the server defition for Rogger.
    #
    # "default_server" usage is from:
    # {{d}} http://nginx.org/en/docs/http/server_names.html
    #       Server Names
    #       retrieved - 2018.3.21
    #       section - Miscellaneous Names
    #       author - Igor Sysoev
    #       editor - Brian Mercer
    #       via - probably some google.com search
    # and
    # {{e}} http://tech.genericwhite.com/nginx-server-name-is-not-working-ignoring-config-and-getting-the-wrong-server-including-ssl
    #       NGINX server_name is not working, ignoring config and getting the wrong server including SSL - I Love Javascript! (December 2017/January 2018)
    #       retrieved - 2018.3.21 and sometime(s) previous in 2018 and/or 2017
    #       published - 5:06PM on 2017.1.17
    #       author - TQ White II according to https://github.com/tqwhite.
    #       via - probably some google.com search
    # {{f}} "default" is from somewhere else that I forget, but I don't use it here. Retrieved probably late 2017 and/or early 2018 and
    #       searching with google.com likely helped me find it
    #
    # These resources were useful in some way, but I forget (probably related to the default_server, or to the suggestion of
    # creating virtual server to deal with unknown domains, like showing the syntax on how to do it):
    # {{g}} https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/
    #       Server Block Examples | NGINX (December 2017/January 2018)
    #       author - NGINX Software, Inc
    #       retrieved - 2017 and/or 2018
    #       via - probably some google.com search
    # {{h}} https://serverfault.com/questions/524813/nginx-default-server
    #       'Nginx "Default" Server? Server Fault
    #       retrieved - 2017 and/or 2018; 2013
    #       published - 2013, 2015-2017
    #       via - probably some google.com search
    # See "server" documentation in D for the "server" directive's reference; I don't
    # remember where this configuration block (the "server { ... }" section), it could
    # be a mix of my own stuff (discussed above) and what was here by default.
    #server {
    #  # See "server_name" documentation in D for the "server_name" directive's reference
    #  server_name none; # (from {{g}} 'A Default "Catch All" Server Block'), ({{d}} "Miscellaneous Names") where they both
    #                    # use "_" for "server_name"
    #  # See "listen" documentation in D for the "listen" directive's reference
    #  listen 80 default_server; # default/default_server citations in comments above
    #  # See "listen" documentation in D for the "listen" directive's reference
    #  #listen 443 default_server; # default/default_server citations in comments above
    #  # See "return" documentation in K for the "return" directive's reference. 403 is
    #  # an HTTP code; HTTP codes are defined in B, 6.1.1
    #  return 403;
    #}
}
