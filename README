THIS PROJECT'S REFERENCES ARE INCOMPLETE! I am currently busy with other
things, so I haven't cited everything yet. Take what you see here with a
grain of salt and don't fork this. I plan on redoing the site in the
relatively near future; you can fork off that if you please.

Rogger is a website built on HTML [87] (reference recommended by [88, top of
page]), CSS [90], Javascript [91], Python [93], Django [94] (recommended by
[95]), CodeMirror [96] (via [95]), jQuery [97] (recommended by [95]), and other
technologies that hopefully are cited throughout this code base.

Resources used to make this project can be found in this README (citations can
be found in the code base as well, using the common [#, locator] notation to
index each source found on this page; for any reference to the original version
of Rogger, you can find information on how to find that under the
"ACKNOWLEDGEMENTS" section), BUT NOT ALL CITATIONS ARE HERE! SOME ARE ALSO JUST
SOMEWHERE ELSE IN THIS REPOSITORY! Some may also be on just the server of the
website itself, and so you can't see the files, though I tried to be diligent
about putting those citations here. I also may have missed a few by accident.

The code for the old version of this site can be found at
bitbucket.org/roggerlogger/rog under the "refactor" and "master" branches (both
master and refactor have citations that may differ from each other, so look at
both of them)

Term(s) used in this file and their references:
  "PDF": https://www.iso.org/standard/63534.html
         Document management -- Portable document format -- Part 2: PDF 2.0
         iso code - 32000-2:2017
         published - 2017.7
         via - https://en.wikipedia.org/wiki/PDF
               PDF - Wikipedia
               retrieved - 2020.3.25
               published - 2020.3.25
               section - right-side information box at top of page
               via - google.com; searched for "pdf" (the acronym for the
                     standard outlined in the reference that encapsulates this
                     reference)





PRIVACY POLICY

According to [62], [63], and [50], the GDPR [64] may be enforceable for this
site. So, this privacy policy addresses the GDPR (it's possible that [50], [57],
and/or [64] state that the existence of this privacy policy may be a requirement
of GDPR; however, I think I really added this because around the time of the
launch of GDPR (2018.5.25, I think, according to unknown references) so many
other companies were announcing new versions of their privacy policy).


Who has access to your data (each point addressed here is from
[57, Responsibility and accountability][50])?

Your data is almost completely kept on the web site's server and other Amazon
Web services utilities [65], and no one has access to it other than those
viewing the site (and depending on what you've set your privacy to). One
exception is that, when you create an account, Google [52] provides the
reCAPTCHA [53] that filters out the bots from the non-bots. I don't know exactly
what it sends to Google. Requests to the server go through the Domain Name
Service (which "History" of [56] says is defined by [54] and [55]), so that
could be a source of information leakage. The server is hosted by Amazon Web
Services [65], but everything should be, in theory, pretty locked down with
them. An administrator has full access to all data, but I consider myself a
benevolent dictator. For GDPR [64]-specific regulation, everything or almost
everything is not held within the European Union.


How can I fix a problem in my data, delete my account, or get my data in a
downloaded form? (these subjects are from [57, Reponsibility and
accountability], [57, Right of access], [57, Right to erasure], [58], [59],
[60], [61])

Contact ben@rogger.co with any issues you have.


Why are YOU allowed to touch my data? (from [57, Reponsibility and
accountability], [57, Lawful basis for processing], [50])

So that the site can function.


You store my data for HOW MUCH TIME? ([57, Reponsibility and accountability][50]
provided this question)

Eternity, except for when you request account deletion, in which case at time
of the actual deletion, all of your data should be removed (unless part of the
deletion process fails or is not thorough enough by accident).


What does the program do with my data? (question origin: [57, Reponsibility and
accountability][50])

Nothing crazy. The craziest it gets is just an algorithm to perform a search
in the search bar you can see at the top of the page.











SOME CITATIONS (using the number-in-square-brackets format commonly found;
the positioning of locators in those square brackets (as well as the comma that
separates the number from the locator) is also from some citation style as
well):

[1]   http://stackoverflow.com/questions/4571686/django-include-template-from-another-app
[2]   http://www.w3schools.com/colors/colors_picker.asp for picking colors
[3]   Google Fonts (fonts.google.com, Google, Inc.), from which you will find various fonts that were used throughout
      this site, loaded from the server fonts.googleapis.com
[4]   Padding seems to add width to at least divs, so the solution to this problem
      was found here: http://stackoverflow.com/a/23692739/4722104
[5]   For centering; this technique seems like common practice, and source is unknown
[6]   http://stackoverflow.com/a/3942399/4722104 for setting CSS to all elements of
      page
[7]   How to hide scroll bars: http://stackoverflow.com/a/23771140/4722104
[8]   Bullet points as information separators idea taken from Google Play Music
      (where they are used to separate album stats like time)
[9]   <br>s used in this div for line breaks is an idea from http://stackoverflow.com/q/12694110/4722104
[10]  Used the table display trick from here for vertical alignment of text:
      https://css-tricks.com/vertically-center-multi-lined-text/
[11]  Profile picture overlapping banner in the center of the banner idea from some unknown
      source
[12]  Whitespace can cause gaps between divs. Reduced font size to 0px to solve this problem.
      Source is unknown.
[13]  Removing drop down arrow for selects: http://stackoverflow.com/questions/16603979/select-removing-dropdown-arrow
[14]  Using OneToOneField to mimic additional information added to built-in User model from Django documentation and unknown source (was used in previous project)
[15]  Passing csrfmiddlewaretoken into POST dictionary to fix the header thing not working is from and unknown source, but used
      in the previous iteraiton of Rogger
[16]  Used model reference from string found at this location http://stackoverflow.com/a/39712086 to resolve circular dependencies
      on imports
[17]  Differentiating between different button presses in form submission from http://stackoverflow.com/questions/1395807/proper-way-to-handle-multiple-forms-on-one-page-in-django
[18]  Help with putting string in raw format for javascript safety: http://stackoverflow.com/a/15392758 (used this answer and the comments on the answer for help)
[19]  Probably a commonly-used way to wrap a counter to mimic a ring buffer, but this code was at least sanity checked by, but possibly derived from, my knowledge that "Operating System Design: The Xinu Approach (Second Edition)" by Douglas Comer uses this technique
[20]  related_name naming scheme from https://docs.djangoproject.com/en/1.10/topics/db/queries/#following-relationships-backward (the FOO_set explanation part); also, I think I did this using-related_name-thing-to-resolve-migration-conflicts thing in the original Rogger project, suggested by a citation that I don't have on me right now, but this modification was recommended anyway by the django library when i tried to run the site, and I just followed those instructions, so citing the other resource may not be necessary
[21]  Using scrollIntoView() to scroll parent element to the element calling
      scrollIntoView() from unknown source. A span is used in the month that we
      want to scroll to as an element to target when telling the browser to
      scroll to it using scrollIntoView(...) (scrollIntoView defined by
      [106, 4.2.4])
[22]  This conditional, for calculating if scrolling has reached the bottom, from multiple sources that are unknown
[23]  noMoreUpdates variable for keeping track of if we received notice that no more updates were available from the previous version of Rogger (codebase at bitbucket.org/roggerlogger), can't remember if I got this technique from an outside source
[24]  <br/> usage to break lines in ReportLab from unknown source
[25]  The strategy of allowing both approved and unapproved followers see user data if the privacy setting is set to public
      but then showing all follows that have occurred but still need to be approved when the privacy setting is public or more
      secure is from the previous version of Rogger; I don't think there are any resources that I used to get that strategy,
      but I can't remember everything that I used, so to be safe I will say that there is a possibility an outside resource helped.
      The "approved" attribute in the Follow model keeps track of whether a follow is approved, and, again, is only looked at
      if the user-who-is-being-followed's profile is not on the public setting.
[26]  This technique of a hidden form to be triggered from a remote button from unknown source(s).
[27]  Not sure if I used this kind of variable in the last version of Rogger and if there is a citation for it.
[28]  Using a presigned URL to control access to files in buckets is an idea from an unknown source.
[29]  Using middleware to remember when the user was last active from unknown source.
[30]  I was told by some unknown source that using the .dataset property in javascript isn't backwards compatible,
      so there was an alternate method discussed, which I believe was .getAttribute(), which
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes suggested.
[31]  Having display names is inspired by Twitter (and probably inspired by others as well)
[32]  http://stackoverflow.com/questions/4571686/django-include-template-from-another-app
[33]  MIT License from https://opensource.org/licenses/MIT via https://en.wikipedia.org/wiki/MIT_License
[34]  These types are from and/or inspired by the original Rogger (see url for the original Rogger below in the "ACKNOWLEDGEMENTS" section),
      and they were inspired by merv.stanford.edu, so they were not my own creation
[35]  These types are definitely from the original Rogger (see url for the original Rogger below in the "ACKNOWLEDGEMENTS" section),
      and they were from merv.stanford.edu, so they were not my own creation.
[36]  To seek to the 0 position in a BytesIO before sending the file with boto3 from https://stackoverflow.com/questions/36274868/saving-an-image-to-bytes-and-uploading-to-boto3-returning-content-md5-mismatch
[37]  Properly setting up the form for picture upload from https://www.cs.tut.fi/~jkorpela/forms/file.html
[38]  Using a table, tr, and td (and whatever tags show up that the browser puts in itself automatically) is
      an idea derivative to the answer(s) found here:
      https://stackoverflow.com/questions/8468066/child-inside-parent-with-min-height-100-not-inheriting-height
[39]  Using height instead of min-height to specify a minimum height and learning that I have to use it on
      a <td> element is from https://stackoverflow.com/questions/19432092/can-i-use-a-min-height-for-table-tr-or-td
[40]  Suggestion to use CodeMirror as a syntax highlighter is from
      https://stackoverflow.com/questions/1619167/textarea-that-can-do-syntax-highlighting-on-the-fly
[41]  Confirming that escapejs is safe for use in Javascript strings that are within HTML files is from https://stackoverflow.com/questions/23331988/djangos-escapejs-filter-and-xss
[42]  I am not sure if this filter method to remove zeros from end of number is from someone else's idea. I feel like there is a chance it is, but I can't remember
[43]  merv.stanford.edu
[44]  This function name inspired by the name of Django's send_mail() function
[45]  Using the time.sleep() (or any time.sleep()-like function) function to rate-limit the emails being sent out is an idea from
      an unknown source.
[46]  The idea of creating this function is from the old Rogger, which also had a similar function
[47]  Chrome was complaining about how the CSRF cookie was not valid, so adding CSRF_COOKIE_SECURE and setting it to "True" to the
      settings file (which you can't see in this repository) is an idea from https://groups.google.com/d/topic/wagtail/opM27Qnj_NU/discussion and (an)other unknown resource(s).
      Adding SESSION_COOKIE_SECURE to the site's settings.py file is a suggestion from the Django documentation and probably from https://stackoverflow.com/questions/40616115/django-403-csrf-verification-failed as well.
      (https://docs.djangoproject.com/en/1.11/topics/security/) and was inspired by the aforementioned source as well.
[48]  Explanation of what I need to say to users to abide by the the EU Cookie law(s) is from https://www.cookielaw.org/the-cookie-law/ and http://ec.europa.eu/ipg/basics/legal/cookies/index_en.htm
[49]  https://stackoverflow.com/questions/41787263/different-value-of-csrf-token-in-response-header-and-browser-cookies-csrf-verif
[50]  The page at https://www.gdpreu.org/ ("GDPR EU.org - Web learning resources for the EU General Data Protection Regulation";
      retrieved likely around May 2018) or subpages of that page, and/or https://en.wikipedia.org/wiki/General_Data_Protection_Regulation
      ("General Data Protection Regulation - Wikipedia"; also retrieved somewhere near May 2018)
[51]  Boto3 saying that it has the wrong "signature version",
      https://forums.aws.amazon.com/message.jspa?messageID=681392 (which said
      that I can use the "config" parameter with the value stated there),
      https://github.com/boto/botocore/issues/377 - jamesls (the string in the
      Config object call also from here)
[52]  Google
      google.com
[53]  ReCAPTCHA
      https://www.google.com/recaptcha/
[54]  https://tools.ietf.org/html/rfc1034
      Domain Names - Concepts and Facilities
      author - P. Mockapetris
      retrieved - 2019.11.22
      published - 1987.11
      via - [56], History
[55]  https://tools.ietf.org/html/rfc1035
      Domain Names - Implementation and Specification
      author - P. Mockapetris
      published - 1987.11
      retrieved - 2019.11.22
      via - [56], "History"
[56]  https://en.wikipedia.org/wiki/Domain_Name_System
      Domain Name System - Wikipedia
      published - 2019.9.30
      retrieved - 2019.11.22
      via - google.com search; searched for "DNS rfc", which is derived from
            the acronym for Domain Name System "DNS", and the acronym for
            Request for Comments, "RFC". DNS is from [54] and [55] according to
            "History" of [56]; [66] is the reference for RFCs.
[57]  https://en.wikipedia.org/wiki/General_Data_Protection_Regulation
[58]  https://www.gdpreu.org/
[59]  https://www.gdpreu.org/the-regulation/list-of-data-rights/right-to-rectification/
[60]  https://www.gdpreu.org/the-regulation/list-of-data-rights/right-to-erasure/
[61]  https://www.gdpreu.org/the-regulation/list-of-data-rights/right-to-data-portability/
[62]  https://www.gdpreu.org/the-regulation/who-must-comply/
[63]  https://www.gdpreu.org/faq/
[64]  https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=OJ:L:2016:119:FULL&from=EN
      Official Journal of the European Union
      author - European Union
      published - 2016.5.4
      via - could be from https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:02016R0679-20160504&qid=1567786393726&from=EN
            but is also definitely from https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:02016R0679-20160504&from=EN;
[65]  Amazon Web Services
      aws.amazon.com
      author - Amazon Web Services, Inc. (or it could additionally/instead be their affiliates)
[66]  https://ietf.org/standards/rfcs/
      IETF | RFCs
      author - Internet Engineering Task Force
      retrieved - 2019.12.13
      via - searching for "rfc" using google.com, the acronym for Request for
            Comments, a conept from [66]
[67]  https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html
      Amazon Elastic Block Store (Amazon EBS) - Amazon Elastic Compute Cloud
      author - Amazon Web Services, Inc. (or it could additionally/instead be their affiliates)
[68]  https://docs.aws.amazon.com/s3/index.html?nc2=h_ql_doc_s3-b
      Amazon Simple Storage Service Documentation
      author - Amazon Web Services, Inc. (or it could additionally/instead be their affiliates)
[69]  If you've been directed to this citation point, it means that the feature
      cited helps to create this environment similar to iPhone OS (by Apple,
      Inc.) Table Views, where data that belongs above or below the data
      currently in-view is loaded at the time it is needed instead of
      ahead-of-time. In this case, the calendar can scroll up and down, but
      since time is virtually infinite in both the past and future directions,
      we can't load the calendar of all time at page load, so instead when the
      user scrolls up or down enough along the months in the calendar, the site
      will load in new calendar data as it is needed.
[70]  merv.stanford.edu
      Merv's RUNNING
      author - Mark Crimmins
      comment - Website title from page title of [101]
[71]  Many different apps use this strategy of confirming the password to
      prevent, I think, someone from changing important settings of another user
      who somehow has inadvertently given access to their account to the
      malicious actor.
[72]  https://stackoverflow.com/questions/19037664/how-do-i-have-an-s3-bucket-return-404-instead-of-403-for-a-key-that-does-not-e
      amazon s3 - How do I have an s3 bucket return 404 (instead of 403) for a key that does not exist in the bucket/ - Stack Overflow
      author - users Tim Gautier and feroze
      retrieved - 2020.3.27
      published - 2013.9.26
      via - search for "s3 404 instead of 403" on google.com ("s3" refers to [77], while "404" and "403" refer to [76, 10.4.5] and [76, 10.4.4], respectively)
[73]  https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html
      Authenticating Requests: Using Query Parameters (AWS Signature Version 4) - Amazon Simple Storage Service
      author - Amazon Web Services, Inc. (or it could additionally/instead be their affiliates)
      retrieved - 2020.3.27
[74]  https://tools.ietf.org/html/rfc1738
      Uniform Resource Locators
      author - T. Berners-Lee, L. Masinter, M. McCahill; using the author order from the reference
      published - 1994.12
      retrieved - 2019.11.29
      via - [75, History]
[75]  https://en.wikipedia.org/wiki/URL
      URL - Wikipedia
      published - 2019.10.16
      retrieved - 2019.11.30
      via - search for "URL" on google.com ("URL" is the acronym for the thing defined by [74])
[76]  https://www.ietf.org/rfc/rfc2616.txt
      Hypertext Transfer Protocol -- HTTP/1.1
      authors - R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Manister, P. Leach, T. Berners-Lee; using the author order from the reference
      published - 1999.6
      retrieved - before 2020.3.27 or 28 as well as on one of those two dates; 2020.4.21
      rfc # - 2616
      via - some forgotten resource recommended, https://www.w3.org/Protocols/rfc2616/rfc2616.html, which recommended this reference
[77]  https://aws.amazon.com/s3/
      Cloud Object Storage | Store & Retrieve Data Anywhere | Amazon Simple Storage Service (S3)
      author - Amazon Web Services, Inc. (or it could additionally/instead be their affiliates)
[78]  https://www.mozilla.org/en-US/firefox/new/
      Firefox
      author - Mozilla
      version - 68.0.1 on macOS
[79]  https://docs.djangoproject.com/en/1.11/ref/django-admin/
      django-admin and manage.py | Django documentation | Django
      author - Django Software Foundation
      retrieved - 2020.3.28
[80]  python.org
      Python 3.5.2
      author - Python Software Foundation
[81]  https://docs.djangoproject.com/en/1.11/topics/auth/default/
      Using the Django authentication system | Django documentation | Django
      author - Django Software Foundation
      retrieved - 2020.3.28
[82]  https://docs.djangoproject.com/en/1.11/topics/db/models/
      Models | Django documentation | Django
      author - Django Software Foundation
      retrieved - 2020.3.28
[83]  https://www.w3.org/TR/REC-xml/
      Extensible Markup Language (XML) 1.0 (Fifth Edition)
      author - W3C
      published - 2008.11.26
      retrieved - 2020.3.28
      via - [84, "Extensible Markup Language (XML)" right-side box]
[84]  https://en.wikipedia.org/wiki/XML
      XML - Wikipedia
      published - 2020.3.11
      retrieved - 2020.3.28
      via - search for "xml" on google.com ("xml" comes from XML, defined in [83] according to [84, "Extensible Markup Language (XML)" right-side box])
[85]  https://docs.djangoproject.com/en/1.11/ref/settings/
      Settings | Django Documentation | Django
      author - Django Software Foundation
      retrieved - 2020.3.28
[86]  https://docs.djangoproject.com/en/1.11/topics/settings/
      Django settings | Django documentation | Django
      author - Django Software Foundation
      retrieved - 2020.3.28
[87]  https://html.spec.whatwg.org/
      HTML Standard
      author - WHATWG
      via - [88, top of page]
[88]  https://www.w3.org/html/
      W3C HTML
      author - W3C
      via - W3C [89]'s website was found by searching for "w3c" on google.com. I
            navigated that site to find this page.
[89]  https://www.w3.org/
      author - W3C
      retrieved - 2020.3.29
      via - search for "w3c" on google.com ("w3c" refers to W3C, reference [89])
[90]  https://www.w3.org/TR/css-2018/
      CSS Snapshot 2018
      author - W3C Working Group
      published - 2019.1.22
      retrieved - 2020.3.29
[91]  https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf
      ECMAScript 2019 Language Specfication (ECMA-262)
      author - ECMA International
      published - 2019.6
      edition - 10
      retrieved - 2020.3.29
      via - Forgotten reference. The "ECMA-262" standard number was confirmed by
            a google.com [92] search for "ecmascript", which refers to this
            reference, and I learned this term from some unknown reference.
[92]  google.com
      Google
      author - Google, Inc.
[93]  python.org
      Python (programming language)
      author - The Python Software Foundation
[94]  djangoproject.com
      Django (web framework)
      author - Django Software Foundation
      via - I forget where
[95]  Catch-all for references I can't recall
[96]  https://codemirror.net/
      CodeMirror
      via - search for "codemirror" on google.com ("codemirror" refers to [96])
[97]  https://jquery.com/
      jQuery
      author - The jQuery Foundation
      via - search for "jquery" on google.com ("jquery" refers to the name of
            this software)
[98]  https://docs.djangoproject.com/en/1.10/intro/tutorial01/
      Writing your first Django app, part 1 | Django documentation | Django
      author - Django Software Foundation
      retrieved - most likely around Fall of 2016
[99]  https://www.opengroup.org/membership/forums/platform/unix
      Unix
      authors - The Open Group
      via - [100, info box on right]
[100] https://en.wikipedia.org/wiki/Unix
      Unix - Wikipedia
      published - 2020.3.17
      retrieved - 2020.4.3
      via - search for "unix" on google.com ("unix" is the name of [99])
[101] https://web.archive.org/web/20170328042657/http://merv.stanford.edu/
      Merv's RUNNING
      author - Internet Archive Wayback Machine
[102] It may have been suggested that I include a feature, when creating a
      week's PDF (see "GENERAL CITATIONS" below) to allow the user to put custom
      name on the PDF. I don't remember who, if anyone, suggested this.
[103] https://docs.python.org/3/library/datetime.html
      datetime -- Basic date and time types -- Python 3.8.2 documentation
      author - The Python Software Foundation
[104] I have seen many calendars that include, within the days listed in a
      month, days that are not actually in the month so that there are no empty
      spaces leading up to the first day of the month or trailing the last day
      of the month. This cited area takes care of that functionality.
[105] Searching for users may have been a suggestion from someone. Or it may
      have been inspired by some service doing such a thing. I don't know. The
      method of comparing the histogram of bigram occurrences between two
      phrases to determine how close they are (using the sum-squared difference
      between respective bigram's counts) may have been at least inspired by
      some sort of reference, but I can't remember what it was if that was the
      case.
[106] https://dom.spec.whatwg.org/
      DOM Standard
      author - WHATWG
      retrieved - 2020.4.9
      published - 2020.4.6
[107] Showing, on their user profile, the total mileage that someone has logged
      may have been a recommendation from someone
[108] twitter.com
      Twitter
      author - Twitter, Inc.
[109] https://docs.djangoproject.com/en/3.0/topics/templates/
      Templates | Django documentation | Django
      author - Django Software Foundation
[110] I think someone may have asked for the feature where the website generated
      a PDF from the workouts for a given week, or at least they asked for the
      ability to print the entries from that week. If no one actually requested
      that and I came up with it by myself, then the week timespan is based on
      the fact that Tom Donnelly, the coach of the Haverford College (in
      Haverford, PA, USA) would ask his athletes for their weekly running logs,
      at least when he was coaching the cross country and indoor/outdoor track
      teams from Fall 2008 to Spring 2012.
[111] Forgotten/unknown reference. This is not a single reference, as anything
      that uses an unknown or forgotten reference is directed here.
[112] https://docs.djangoproject.com/en/1.11/topics/http/sessions/
      How to use sessions | Django documentation | Django
      author - Django Software Foundation


GENERAL CITATIONS:
This site has a lot of influence from Mark Crimmins' "Merv's RUNNING"
(https://web.archive.org/web/20170328042657/http://merv.stanford.edu/ provided
the title) at merv.standford.edu (now mervsrunning.com, also titled "Merv's RUNNING").
Some major ideas from there (but possibly not all of them if my memory is
failing me):
  - Creating shoes and tracking mileage on them in logs/adding them to log entries
  - Using a calendar layout (probably most influential is the ability to click on
    a date on the calendar to make a new entry for that date) (also, a lot of
    people hated the old calendar layout, so the new one is also in response to
    them), and Merv may have also inspired the idea of the current month
    displayed being controlled by drop-downs
  - Workout creation layout
  - Custom workout types (also a suggestion from a user)
  - Allowing users' profiles to go completely private with no or close to no
    hint of the account existing
  - The hidden profile (as in the user's page 404s) privacy mode, which was
    requested by Flora Berklein in person in March of 2016 (I think that's the
    correct date)
- Instagram for inspiring the cursive "rogger" that you will see throughout the
  site (like on the navigation bar, about page, maybe others I am forgetting).
- The purplish-grey and white-ish color set used around the site is derivative
  of the greyish-purple and white that Slack, the collaboration app, uses, and I
  probably have seen similar colors to Rogger's purplish-grey and whiteish color
  set elsewhere around the web as well, so Rogger's purplish-grey and whiteish
  color set could be derivate of those, too. Further, I may have used more that
  just one purplish-grey and/or whiteish color in Rogger, so these citations
  apply to those as well. I also had the side bar on the home page vs. most of
  the rest of the site be the same color scheme as Slack (the side bar was the
  purplish-grey while most of the other backgrounds/empty spaces were white or
  close to white, at least in the default theme of Slack as of 10:37 PM Eastern,
  not daylight savings, on 2017.11.11). Seeing as I took design choices like
  that from Slack, Slack could have also influenced the site in other ways
  besides the sidebar-other-spaces thing and the general color set. I don't
  remember anything specific, but I am just putting this here to make sure I am
  "covering my bases" when it comes to citing.
- Also, as I think I have stated elsewhere in this file, this site uses a lot of
  common features found around web
- Evan Hamilton and Joel Christian to their tiny-but-appreciated direct and
  indirect contributions to the old project (bitbucket.org/roggerlogger) of
  which they were part of the coding team, and their probably ongoing indirect
  contributions to this one.
- Everyday users of the site add their data to the site, so this data was useful
  when checking the correct operation of the site.
- This repository's/this project's version control is managed by Git
  (git-scm.com)
- See [110] for another feature potentially requested by someone
- Allowing people to follow others is an idea from social media, such as [108]
- Protected but partially visible accounts, and blocking accounts, are ideas
  from the internet, such as [108]

DEBUG:
Thanks to everyone that submitted bug reports. Safari, the web browser, was very important in debugging, and less important but still important were other browser(s) probably including (but there may be others I am forgetting) Firefox, Chrome, Internet Explorer (unknown release number(s) like 6, 7, 8, 9, 10, 11, etc), Edge, mobile versions of these browsers or their derivatives (like the browser used in the Google bar in Android and the iOS Google App).

SUGGESTIONS:
Thanks to everyone who suggested things to make the site better.


This site is built on the Django web development framework.

How to set up NGINX (the web server) to serve this Django app
is from https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-uwsgi-and-nginx-on-ubuntu-14-04,
http://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html,
https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts (for telling me where to put the Rogger server configuration (somewhere in /etc/nginx/nginx.conf)),
and probably other unknown resources as well. (SEE OTHER CITATIONS BELOW, THEY TAKE PRECEDENCE)

Thanks to https://www.whatsmydns.net, http://www.inmotionhosting.com/support/tools/visual-domain-routing, and other unknown sources, for helping debug the server.

Using json.loads() to convert strings with surrogate pairs into proper unicode for data import from a json file (for transferring between the old Rogger's "python manage.py dumpdata --indent <# of spaces indent>" output to the new database) is from
https://stackoverflow.com/questions/38147259/how-to-work-with-surrogate-pairs-in-python and possibly others as well. Being able to transfer the data between two different databases via just
Django models, which is the idea that allowed me to generate the pseudocode that got the ordering of how to move the old data to the new site (in the end though, I didn't use the old database's
data with just models; I just used the pseudocode ordering), is from https://rlskoeser.github.io/2016/03/31/migrating-data-between-databases-with-django/. That site also may have pointed out to
me that I could use dumpdata to get the old data out of the old site. I suppose it is possible that that site outlines the entired original method I was going to use to transfer the data over,
now that I think about it, I just can't remember and if it was, I have modified it so that my data transfer code directly reads the output of "python manage.py dumpdata --indent <# of spaces to indent>".

Thanks to https://community.letsencrypt.org/t/are-they-limitations-on-who-can-use-lets-encrypt/687 for clearing up
whether or not I can use Certbot and Let's Encrypt on my site and still stay compliant by licensing the site code under the MIT License (below).

Thanks to https://stackoverflow.com/questions/44892085/letsencrypt-certbot-timeout-error for helping me debug using Certbot and Let's Encrypt.

Thanks to https://lifehacker.com/5683682/five-best-domain-name-registrars for suggesting Name.com to use as a domain name registrar.

Using a virtualenv'd folder to house a Django project is an idea from (an) unknown resource(s) (high probability that is is from the Django's team's own django tutorials at djangoproject.com, and maybe other resources as well).

Checking sqlite3 database for corruption using the PRAGMA integrity_check command is from https://serverfault.com/questions/8048/how-can-i-verify-that-a-sqlite-db3-file-is-valid-consistent

Deleting all Django sessions technique I used is from http://blog.sashalaundy.com/blog/2014/08/26/howto-force-all-django-users-to-log-out-with-the-django-orm/

How to install sqlite3 for Ubuntu (as the sqlite3 Linux download didn't work) is from https://askubuntu.com/questions/150347/sqlite-binary-file-does-not-work-on-my-ubuntu

Explanation of what I need to worry about regarding the EU Cookie law(s) is from https://www.cookielaw.org/the-cookie-law/ and http://ec.europa.eu/ipg/basics/legal/cookies/index_en.htm

https://apple.stackexchange.com/questions/209572/how-to-use-pip-after-the-os-x-el-capitan-upgrade I think resolved the issue on my Mac where pip couldn't install anything into the SIP-protected MacOS folder where Python is installed

systemd-uwsgi-DAEMON-DEFINTION-FILE-SPECIFIC CITATIONS
-------------------------------------------------------
It is probable that using systemd to start up (and coordinate) the uwsgi server for Rogger is a suggestion from
https://serverfault.com/questions/785502/create-daemon-on-ubuntu-16-04. Also, the structure of this file is based
off an example found at https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/sect-Managing_Services_with_systemd-Unit_Files.html
and possibly elsewhere.

ExecStart command is a derivative of those found at http://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html, and possibly from
https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-uwsgi-and-nginx-on-ubuntu-14-04,
https://docs.djangoproject.com/en/1.11/howto/deployment/wsgi/uwsgi/, and maybe other resources

Setting Type to forking is a suggestion from (an) unknown resource(s)

WantedBy usage (from unknown resource(s) and https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files),
seems to be the best way to get this service running at boot, and possibly recognized by any systemd command.

Using the --home option for uwsgi is a suggestion from an unknown resource and discussed in https://docs.djangoproject.com/en/1.11/howto/deployment/wsgi/uwsgi/
--------------------------------------------------------
END systemd-uwsgi-DAEMON-DEFINTION-FILE-SPECIFIC CITATIONS



/etc/nginx/nginx.conf rogger SERVER DEFINITION CITATION SECTION
--------------------------------------------------------
THIS SERVER DEFINTION IS A DERIVATIVE OF THE SERVER DEFINTIONS FOUND AT
https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-uwsgi-and-nginx-on-ubuntu-14-04,
http://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html,
AND PROBABLY OTHERS.

Putting this server definition here (/etc/nginx/nginx.conf) is from
https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts

All sections in the server configuration section talking about how Certbot is its manager were created and/or modified by Certbot, not me
(basically, for those without access to the file, this is the code that redirects non-HTTPS connections to HTTPS connections, and
and certificate setup)

Method of redirecting non-HTTPS requests in the nginx rogger server config (The "if ($scheme != "https")" if clause)
was made by Certbot, and https://serverfault.com/questions/250476/how-to-force-or-redirect-to-ssl-in-nginx confirmed for me
that this was a way to do that and also pointed out that I can still listen on port 80 in the same server definition to allow
those non-HTTPS connections to come in and get redirected to the HTTPS site.

Thanks to https://serverfault.com/questions/814767/413-request-entity-too-large-in-nginx-with-client-max-body-size-set
for telling me what the variable is in the nginx configuration that controls how big a request is allowed through the server.
Limiting the request size using the web server instead of Django or something else is a suggestion from an unknown source.

This has been put in the nginx.conf file, and explanation for it is with it, along with its citations:
    # This server definition is used to reject requests that aren't for the domains processed by the server definition below.
    # The "return" usage is from http://nginx.org/en/docs/http/server_names.html (retrieved 2017.12.18) in the code under
    # 'In catch-all server examples the strange name "_" can be seen'. Putting this as the first server to make it "default"
    # so that other domains are processed here and not in the other server is probably from the same page and/or
    # https://serverfault.com/a/525011. Making sure that these requests stop here and not at Django so that I don't
    # get spammed with error emails is an idea from https://stackoverflow.com/questions/18220519/how-to-disable-djangos
    # -invalid-http-host-error. Even though this version of the site uses Nginx (and I think that site talks about Apache,
    # there might be some configuration used there that was directly, or more likely indirectly, relevant to what I wrote
    # for this server definition. Using two different listens for each port is an idea from Certbot which did this for
    # the server defition for Rogger.
    server {
      listen 80;
      listen 443;
      return 403;
    }
--------------------------------------------------------
END /etc/nginx/nginx.conf rogger SERVER DEFINITION CITATION SECTION

THE ROGGER SERVER'S /etc/apt/sources.list FILE ADDITIONS THAT I MADE ARE BELOW
--------------------------------------------------------------------------------
# NEXT TWO LINES FROM https://www.nginx.com/resources/wiki/start/topics/tutorials/install/
# + ADDING THE KEY for the nginx repository AFTER THE KEY ERROR DESCRIBED BY THAT PAGE,
# THE sudo apt-get update, AND THE sudo apt-get install nginx COMMANDS I RAN ARE ALSO FROM THERE
deb http://nginx.org/packages/ubuntu xenial nginx
deb-src http://nginx.org/packages/ubuntu xenial nginx
--------------------------------------------------------------------------------
END OF STUFF THAT I ADDED TO /etc/apt/sources.list



DEPLOYMENT SERVER'S ROGGER INSTALLATION's settings.py citations (in addition to those that may have already been mentioned):
See citation [47]



Installation instructions I used for the production server (plus some other outside knowledge that I don't remember where it is from) were found here:
virtualenv:    With pip (not sure about source for this method of installation)
Django:        With pip (not sure where I got this from; may be recommended by the Django team themselves)
nginx:         https://www.nginx.com/resources/wiki/start/topics/tutorials/install/ (they talk about modifying the /etc/apt/sources.list file, which I did)
pip:           https://pip.pypa.io/en/stable/installing/ (with the get-pip method + python3 instead of python)
ReportLab:     https://bitbucket.org/rptlab/reportlab (the README, with pip)
Boto 3:        https://github.com/boto/boto3 (with pip)
Pillow:        http://pillow.readthedocs.io/en/3.0.x/installation.html (with pip, although ReportLab had already installed it as a dependency)
uWSGI:         https://uwsgi-docs.readthedocs.io/en/latest/Install.html (with pip + "sudo apt-get install gcc" + "sudo apt-get install python3-dev")
Certbot:       https://certbot.eff.org/#ubuntuxenial-nginx



Thanks to https://www.sqlite.org/onefile.html for mentioning that a SQLite 3 file is cross-platform (and I think cross architecture), which saved me
a ton of headache.





This site uses Django, JQuery, ReportLab, Pillow, Boto3, Let's Encrypt (a GREAT GREAT GREAT initiative) + Certbot (also FANTASTIC), nginx, Ubuntu 16.04 (the AWS variant), virtualenv, pip, CodeMirror, Amazon Web Services, and probably other things I'm forgetting to mention as well.

Thanks to Atom (developed by Github, I think) for being a (relatively) great text editor. It was used for the majority of the code that I wrote for this site.

ACKNOWLEDGEMENTS:
The design of this site is inspired by all my experience using the web. The
navigation bar at the top, the search bar, the Material-design(by Google)-inspired
layout and encapsulation of objects, the reverse-chronological feeds, etc. are not
my own creation; in fact, you will find very few things that *are* my complete
original ideas when it comes to design and aesthetics.

Also, a ton of this site is based on experience with merv.standford.edu, which
is a running log site whose users' exported data I support for importing.



CITATIONS FOR FEATURES OF THIS SITE (KNOWN CONTRIBUTORS, ASSUME THAT THERE MAY BE FORGOTTEN CONTRIBUTORS FOR EACH FEATURE):
-----------------------------------------------------------------------
Entry textbox (when writing the entry) expands to fit all typed content:
  Kristina Kronauer
Back button (mostly) does not reset the calendar in the user view:
  Amelia Keyser-Gibson
  Charlie Hale
Custom units for types when displayed as totals for weeks, etc.:
  Nora Weathers
  Sam Fujimori
  Amelia Keyser-Gibson
Shoe mileage:
  merv.standford.edu
  Kristina Kronauer
Merv test dataset(s) (used for both import testing and general site testing):
  Eric Arnold
Differentiating between new workout entries and updated workout entries:
  Nora Weathers
Letting workout titles in calendar show completely instead of being truncated:
  Henri Drake
Importing Merv data/Exporting Rogger data:
  Eric Arnold (import only)
  Joel Christian
  Kristina Kronauer
Having an updates feed:
  Eric Arnold
Using a more traditional calendar in the user profile:
  merv.standford.edu
Allowing underscores in usernames:
  Eric Chesterton
Pace calculation of entries if distance and time length of workout are given:
  merv.stanford.edu
  Greg Morgan
  Kristina Kronauer (I think)
French Localization
  Possibly Charlotte Lellman
Asking for Rogger "swag", which I responded to by making a fundraiser because people also wanted to give
money to keep the site running
  Somebody/Multiple sombodies
Giving positive feedback about the panel on the left for follows, and "new fonts" (though I think this was for the old site, bitbucket.org/roggerlogger/rog, for a git commit that occurred near 2017.10.30)
  Charlotte Lellman
Pointing out that the profile page of a user scrolls and the calendar does as well (in the old site, bitbucket.org/roggerlogger/rog); this was remedied in this version of the site
  Charlotte Lellman

For every other feature, you should also assume that there is a good chance it was a result of me getting
feedback from users.
-----------------------------------------------------------------------

People who helped debug (for the things discussed below that were debugged, there may be other people who contributed to debugging them as well):
-Tyler Fong
-Joseph Boyle
-Charlie Hale
-Brian Sokas
-Katie Pokorny
-Amelia Keyser-Gibson
-Kristina Kronauer
-Lukasz Tyler Olenginski
-Kelley Riffenburgh
-Evan Hamilton
-Flora Berklein
-Nora Weathers
-Sam Fujimori
-Greg Morgan
-Eric Arnold
-Charlie Marquardt
-Allison Guindon
-Nicholas Reynolds
-Zachary Gabor, Griffin Kaulbach, users "alphdollie" and "hdoll" (Issue: error gets thrown when no workout type is specified in new workout because they have not made any types, and the "Unknown" type has not been created for them)
-this page: https://stackoverflow.com/questions/41787263/different-value-of-csrf-token-in-response-header-and-browser-cookies-csrf-verif, Greg Morgan, Allison Guindon, Nick Reynolds, Lukasz Tyler Olenginski, Lincoln Satterthwaite, Kristina Kronauer: for helping me debug that the browser will automatically look for a favicon, and will get a CSRF cookie if Django handles the request (as in not going to the static file URL) and returns a 200 status.
-Bernie Jones (for the above problem and also for debugging that usernames with spaces in them can get by the account maker), Zach Needell for the same usernames with spaces bug (calling django's reverse url lookup functionality failed with the URL regex I specified for getting the url to a user's profile page)
-user "thale" for automatic bug report suggesting that I had not done a make migration and/or migration when the backupType field was added to the "Workout" model in workoutLogging.models
-users that tried to make a new log entry but failed because they didn't know they were logged out (the new entry page allowed users through even though they weren't logged in) -- automatic bug reports were sent for those people's errors
-users "Ellie" and "nosbigibson" for their automatic bug reports that showed I had an index error for "pretty printing" python's Decimal type (I assumed that all Decimals would have a decimal point when converted to some string, which caused indexing problems)
-Matt Cohen for his automatic bug report for not importing django.contrib.auth.model's User model; that model is used to check to see if the user tagged in an entry actually exists
-the automatic bug report generated when some unknown person tried to access the "/search" resource without actually putting in something to search for
-the automatic bug report that an unknown person generated that triggered, in shared.tools.getErrorString(), an error that "creationForm" could not be found, which was an artifact of me moving code; I never changed that back to the real form's name (which is not creationForm) once I moved that code over
-an unknown user's automatic bug report that I think I had not imported shared.languageLocalization's "baseLocalization" variable into some place, but I forget where that import was
-unknown users' automatic bug report for helping me figure out why the 404 error template I created was not being found at the /hello resource
-Charlie Marquardt, Eric Arnold, maybe others for pointing out browsers not working with both www.rogger(beta).co(m) and rogger(beta).co(m)
-Lena Edelstein for pointing out that the date and time of comments were not local to the front-end's location
-Charlie Marquardt and Eric Arnold for helping to, I think, debug the fact that I had not made an A entry for my domain to route the domain to an IP
-Eric Arnold for pointing out that, for migrated workouts (from old to new site), some distances had too many decimals numbers
-Eric Arnold for checking that emails were being sent out properly (for some mechanism(s) that I can't remember, involved at least entry comments)
-Charlie Marquardt for pointing out that distances on the updates feed page were showing unnecessary 0s in the decimal portion (or just an unnecessary decimal portion) of the distance of workouts
-Charlie Marquardt for pointing out that scientific notation (a*eb, where a and b are numbers) was showing up for workouts on workout pages
-Charlie Marquardt for pointing out that PDF generation was throwing a server error (can't remember what that error was specifically related to, I think it had something to do with the fact that WorkoutWeek's getStats() function changed and the new version returned tuples instead of strings, so the tuple was passed to Reportlab (for PDF generation) instead of the a string, which caused an error)
-Mali Axinn for pointing out that logging in wasn't working for new users. Super weird bug. I haven't gotten a complaint about this until now, which is very confusing.
-Charlie Marquardt and Charlie Hale for pointing out that the domain wasn't routing to the old Rogger server when (I think) I was switching domain name service providers.
-Charlie Marquardt pointed out that the calendar would initialize to (I think) showing an adjacent or near-adjacent month to the current month in the old Rogger. This issue was resolved in this new version of Rogger.
-Joel Christian (and possibly others) who pointed out that IE support (I think primarily, if not completely, for older version of IE) for the old Rogger was bad. I made at least some of this site compatible with older versions of IE as a result, though honestly I stopped testing for IE a while ago.
-Joel Christian, and Sam Fujimori let me know that the site looked good. Eric Arnold said it is better-looking than the old version.
-Eric Arnold and others said that when writing the text of a log entry in the old version of Rogger, each press of the keyboard would make the cursor in the entry area to return to the start of the entry's text. So, for this project, I abandoned what was causing it (a hacked-up TinyMCE editor) for CodeMirror, which seems to have solved this issue.
-Mali Axinn (approximately 2017.9.26) and someone else (unsure of date when this occurred, sometime late summer 2017, I think): Mali's accounts needed to be deleted, so that helped me test that account deletion actually deletes everything related to that account, and that someone else had a bug that I created at least one account for to test out, so when I deleted those accounts, that helped to test that the account's data was being deleted. However, now that I think about it, it doesn't deleted all the information, yet, so I have to address that at some point. Account deletion is not a user-facing feature yet, but it will be at some point, so hopefully it is fixed by then.
-Those (currently unknown who) who trigged the old site's bug where the antivirus would go down, so images couldn't be scanned for viruses on banner and profile picture uploads, and the server would error out, which would send me an email with a bug report. That's how I found out about these situations, and the bug is sort of fixed in this site (there is no antivirus running, so the same error can't occur).
-Eric Arnold said that the site was freaking out (it probably was with regard to Nginx complaining about the gateway), and it turned out that UWSGI hadn't been started. He probably mentioned this to me around 2019.2.17.
-I checked to make sure the TLS encryption (refrence for TLS unknown) was still working as Let's Encrypt (https://letsencrypt.org/, Internet Security Research Group, site found by searching for "letsencrypt" on google.com) emailed me something that made me think it wasn't. I tested the encryption with Mobile Safari (https://www.apple.com/safari/, Apple Inc., site found by searching for "mobile safari" on google.com)
-Eric Arnold -- He pointed out via text on 2020.3.6 that he was getting a 502 code (defined by
    https://www.ietf.org/rfc/rfc2616.txt
    Hypertext Transfer Protocol -- HTTP/1.1
    author - R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Manister, P. Leach, T. Berners-Lee (order taken from reference)
    rfc # - 2616
    published - 1999.6
    via - https://www.w3.org/Protocols/rfc2616/rfc2616.html, which was via something else
 in section 10.5.3) from his web browser. I knew that this was likely NGINX
    http://nginx.org/
 giving him the code, and that I had to fix this by starting up uWSGI
    https://uwsgi-docs.readthedocs.io/en/latest/

and others whose names I don't know, and almost certainly others that I cannot think of.





Beta Testers:
Charlie Marquardt
  -Creating workouts, trying out the updates feed on the home page, probably other things too
Eric Arnold
  -Creating workouts, commenting, probably other things too
Kelley Riffenburgh
Matt Cohen
Jossi Fritz-Mauer
Lena Edelstein
Rich Marisco
+ some others maybe




My mom, dad, and Eric Arnold helped with suggestions on how to cite things and just also with my stress management (and probably other things as well that I can't remember), so thanks to them. Eric suggested that I can email all the users of the site to ask them to reply telling me how they had helped out with the site, and then I can add them to the list of citations.

Also, Eric Arnold told me that I was getting questions on runnerunner.com's message boards relating to Rogger and said that I should chime in to help address them and address the fact that merv.stanford.edu was losing users due to spottiness of the site or other issues, and that I should encourage them to use Rogger as a replacement. He also might have answered questions on runnerunner.com in representation of me as I did not want to log onto runnerunner.com to do so.

--------------------------------------------------------------------------------

Setting up blocking any traffic outside of the US because of GDPR (GDPR is
from
  https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=OJ:L:2016:119:FULL&from=EN
  Official Journal of the European Union
  published - 2016.5.4
  author - European Union
  via - could have been via https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:02016R0679-20160504&qid=1567786393726&from=EN,
        but definitely was via https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:02016R0679-20160504&from=EN
) details follow:

  I use the MaxMind GeoLite 2 database
    https://dev.maxmind.com/geoip/geoip2/geolite2/
    GeoLite2
    author - Maximind
    via - http://nginx.org/en/docs/http/ngx_http_geoip_module.html
          Module ngx_http_geoip_module
          relevant section - introductory section
          via - unknown
  I read about its license here:
    https://creativecommons.org/licenses/by-sa/4.0/
    Creative Commons -- Attribution-Sharealike 4.0 International -- CC BY-SA 4.0
    author - Creative Commons
    retrieved - 2019.11.5
  and
    https://dev.maxmind.com/geoip/geoip2/geolite2/
    GeoLite 2 Free Downloadable Databases << MaxMind Developer Site
    retrieved - around 2019.11
    author - MaxMind
    via - http://nginx.org/en/docs/http/ngx_http_geoip_module.html
          Module ngx_http_geoip_module
          via - unknown
          relevant section - introduction
  in the "License" referred me to that license.

  In order to keep the database updated (as it is downloaded locally), I use
  geoipupdate (reference H) which was recommended by the "Updating Downloadable
  Databases" section of reference I.

  To make sure the database was updating properly, I used the command
    ls -l
  which told me the date the file was updated, or something like that. "ls"
  is a program distributed with reference K.

  Making sure that this non-US blocking technique worked comprised of using
  TunnelBear
    https://www.tunnelbear.com/
    TunnelBear
    author - TunnelBear LLC
  to connect to a VPN in Ireland, and trying to connect to rogger.co while
  expecting failure to do so as an indicator that the blocking code works.


  MaxMind changed its database download process so that you need to have an
  account to download its GeoLite2 databases (reference A). As a result, as
  instructed in reference A's "Steps for Migration", I
    - created an account at reference B (the confirmation page, reference E,
      that shows after signing up in reference B said to look for reference C
      sent to my email address; I followed the instructions saying to set a
      password for that account, using reference D suggested in that email to
      set the password)
    - went to reference F, and clicked on "Generate new license key", which lead
      to reference G. I named the key "Rogger Blocking", said the key was going
      to be used by GeoIP Update (reference H), and then said that the version I
      was using for GeoIP Update was equal to or higher than 3.1.1 (I determined
      this was the case by running geoipupdate --version on the server running
      GeoIP Update). I then clicked "Confirm", which brought up reference J.
      I took the "Account/User ID" value and "License Key" value and put them
      into the GeoIP Update configuration file which you can find at
      serverfiles/geoipupdateconfig in this repository.
  After following those instructions, I used
    geoipupdate -f <path to the GeoIP Update configruation file>
  to test that the database actually updates, and checked the database file's
  modification date (to see if the update succeeded) using "ls -l" ("ls" is a
  command from reference K) in the directory where the database is saved.


References:

(A) https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases/
    Significant Changes to Accessing and Using GeoLite2 Databases | MaxMind Blog
    author - Miguel Atienza
    retrieved - 2020.1.17
    published - 2019.12.18
    via - https://dev.maxmind.com/geoip/geoip2/geolite2/

(B) https://www.maxmind.com/en/geolite2/signup
    GeoLite2 Sign Up | MaxMind
    author - MaxMind
    retrieved - 2020.1.17
    via - reference A, "Steps for Migration" section

(C) Email titled: "Welcome to MaxMind"
    sender - support@maxmind.com
    sent - 2020.1.17

(D) https://www.maxmind.com/en/account/set-password
    Set Password | MaxMind
    author - MaxMind
    retrieved - 2020.1.17
    via - reference C

(E) probably some resource found on the webserver(s) hosting maxmind.com
    retrieved - 2020.1.17
    author - MaxMind
    via - reference B

(F) https://www.maxmind.com/en/accounts/172704/license-key
    License Keys | MaxMind
    author - MaxMind
    retrieved - 2020.1.18
    via - "Steps for Migration" section of reference A

(G) https://www.maxmind.com/en/accounts/172704/license-key/confirm-creation
    Confirm generation of new license key | MaxMind
    author - MaxMind
    retrieved - 2020.1.18
    via - reference F

(H) https://github.com/maxmind/geoipupdate
    geoipupdate
    author - maxmind
    via - https://dev.maxmind.com/geoip/geoipupdate/

(I) https://dev.maxmind.com/geoip/geoip2/downloadable/
    GeoIP2 Downloadable Database << MaxMind Developer Site
    author - MaxMind
    retrieved - 2019.11, approximately

(J) https://www.maxmind.com/en/accounts/172704/license-key/created/
    New license key successfully created | MaxMind
    author - MaxMind
    retrieved - 2020.1.18
    via - reference G

(K) GNU coreutils
    version - 8.25 (output of "ls --version")
    authors - Richard M. Stallman, David MacKenzie (using the author order
              presented by "ls --version")

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

The tweet

  https://twitter.com/arstechnica/status/1234884504755605510
  Ars Technica on Twitter: "Let's Encrypt discovers CAA bug, must revoke customer certificates https://t.co/mZPS9QEsDu by @jrssnet" / Twitter
  author - user @arstechnica
  published - 2020.3.3
  retrieved - 2020.3.3

said that there was a problem with Let's Encrypt certificates. The reference
that the tweet linked to:

  Let's Encrypt discovers CAA bug, must revoke customer certificates | Ars Technica
  https://arstechnica.com/information-technology/2020/03/lets-encrypt-revoking-https-certs-due-to-certificate-authority-bug/
  retrieved - 2020.3.3
  published - 2020.3.3
  author - Jim Salter

said that I would need to renew my SSL Certificate (and explained why), and that
I could do it with
  certbot renew --force-renewal
SSL Certificates are defined by (an) unknown reference(s) and the "certbot"
command is a program is from

  https://certbot.eff.org/docs/
  Certbot
  author - Electronic Frontier Foundation

I restarted the machine, and checked the renewal date of the certificate (to
make sure the new certificate was in use) by using Firefox

  https://www.mozilla.org/en-US/firefox/new/
  author - Mozilla
  version - 68.0.1
  platform - macOS 10.14.6

by going to rogger.co, clicking on the lock icon in the URL bar, clicking on the
right arrow next to "Connection", then "More Information" at the bottom of that
pop-up, and finally "View Certificate" in the window that pops up.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

External motivations for keeping the Rogger server up-to-date:

The article at
  https://arstechnica.com/information-technology/2020/02/serious-flaw-that-lurked-in-sudo-for-9-years-finally-gets-a-patch/
  Serious flaw that lurked in sudo for 9 years hands over root privileges | Ars Technica
  author - Dan Goodin
  published - 2020.2.4
  retrieved - 2020.2.5
which states that sudo
  https://www.sudo.ws/ (URL from bottom of page produced by "man sudo")
may need to be upgraded.

The processor vulnerabilities that have been discovered recently,
possibly including those discussed at 7:30 (this time according to the
table-of-contents in the video) of
  https://youtu.be/qgy9v8p5OJY
  HW News - Apple's Malware Problem, 10700K 5.3 GHz Rumors, & Sony PS5 Pricing - YouTube
  author - Gamers Nexus
  published - 2020.2.17
  retrieved - 2020.2

The server update process was accomplished with these two commands:
  sudo apt-get update
  sudo apt-get upgrade
"sudo" is from
  https://www.sudo.ws/ (URL from bottom of page produced by "man sudo")
and "apt-get" is distributed with
  Ubuntu
  ubuntu.com

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

This site uses encryption in order to be in (somewhat of) compliance with GDPR
[64]. Specifically, the data on the server is encrypted using EC2 volumes [67]
that are encrypted by AWS [65], and the images that users upload are hosted on
an encrypted S3 bucket [68], also encrypted by AWS (though as required by GDPR
according to an unknown reference, the encryption keys in both the EC2 volume
and S3 bucket scenarios should be handled by me, which they aren't).

--------------------------------------------------------------------------------

LICENSE (MIT, from citation [33]):

Copyright 2017 Benjamin Cutilli

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
