Resources used to make this project (citations can be found in the code base as well,
using the [#] notation to index each source found on this page):

[1]   http://stackoverflow.com/questions/4571686/django-include-template-from-another-app
[2]   http://www.w3schools.com/colors/colors_picker.asp for picking colors
[3]   Google Fonts, from which you will find various fonts that were used throughout
      this site, loaded from the server fonts.googleapis.com
[4]   Padding seems to add width to at least divs, so the solution to this problem
      was found here: http://stackoverflow.com/a/23692739/4722104
[5]   For centering; this technique seems like common practice, and source is unknown
[6]   http://stackoverflow.com/a/3942399/4722104 for setting CSS to all elements of
      page
[7]   How to hide scroll bars: http://stackoverflow.com/a/23771140/4722104
[8]   Bullet points as information separators idea taken from Google Play Music
      (where they are used to separate album stats like time)
[9]   <br>s used in this div for line breaks is an idea from http://stackoverflow.com/q/12694110/4722104
[10]  Used the table display trick from here for vertical alignment of text:
      https://css-tricks.com/vertically-center-multi-lined-text/
[11]  Profile picture overlapping banner in the center of the banner idea from some unknown
      source
[12]  Whitespace can cause gaps between divs. Reduced font size to 0px to solve this problem.
      Source is unknown.
[13]  Removing drop down arrow for selects: http://stackoverflow.com/questions/16603979/select-removing-dropdown-arrow
[14]  Using OneToOneField to mimic additional information added to built-in User model from Django documentation and unknown source (was used in previous project)
[15]  Passing csrfmiddlewaretoken into POST dictionary to fix the header thing not working is from and unknown source, but used
      in the previous iteraiton of Rogger
[16]  Used model reference from string found at this location http://stackoverflow.com/a/39712086 to resolve circular dependencies
      on imports
[17]  Differentiating between different button presses in form submission from http://stackoverflow.com/questions/1395807/proper-way-to-handle-multiple-forms-on-one-page-in-django
[18]  Help with putting string in raw format for javascript safety: http://stackoverflow.com/a/15392758 (used this answer and the comments on the answer for help)
[19]  Probably a commonly-used way to wrap a counter to mimic a ring buffer, but this code was at least sanity checked by, but possibly derived from, my knowledge that "Operating System Design: The Xinu Approach (Second Edition)" by Douglas Comer uses this technique
[20]  related_name naming scheme from https://docs.djangoproject.com/en/1.10/topics/db/queries/#following-relationships-backward (the FOO_set explanation part); also, I think I did this using-related_name-thing-to-resolve-migration-conflicts thing in the original Rogger project, suggested by a citation that I don't have on me right now, but this modification was recommended anyway by the django library when i tried to run the site, and I just followed those instructions, so citing the other resource may not be necessary
[21]  Using scrollIntoView() to scroll parent element to the element calling scrollIntoView() from unknown source
[22]  This conditional, for calculating if scrolling has reached the bottom, from multiple sources that are unknown
[23]  noMoreUpdates variable for keeping track of if we received notice that no more updates were available from the previous version of Rogger (codebase at bitbucket.org/roggerlogger), can't remember if I got this technique from an outside source
[24]  <br/> usage to break lines in ReportLab from unknown source
[25]  The strategy of allowing both approved and unapproved followers see user data if the privacy setting is set to public
      but then showing all follows that have occurred but still need to be approved when the privacy setting is public or more
      secure is from the previous version of Rogger; I don't think there are any resources that I used to get that strategy,
      but I can't remember everything that I used, so to be safe I will say that there is a possibility an outside resrouce helped.
      The "approved" attribute in the Follow model keeps track of whether a follow is approved, and, again, is only looked at
      if the user-who-is-being-followed's profile is not on the public setting.
[26]  This technique of a hidden form to be triggered from a remote button from unknown source(s).
[27]  Not sure if I used this kind of variable in the last version of Rogger and if there is a citation for it.
[28]  Using a presigned URL to control access to files in buckets is an idea from an unknown source.

This site is built on the Django web development framework.

ACKNOWLEDGEMENTS:
The design of this site is inspired by all my experience using the web. The
navigation bar at the top, the search bar, the Material-design(by Google)-inspired
layout and encapsulation of objects, the reverse-chronological feeds, etc. are not
my own creation; in fact, you will find very few things that *are* my complete
original ideas when it comes to design and aesthetics.

Also, a ton of this site is based on experience with merv.standford.edu, which
is a running log site whose users' exported data I support for importing.

The code for the old version of this site can be found at bitbucket.org/roggerlogger/rog under the "refactor" and "master" branches (refactor has more citations if you are looking for them)
